compile:
  # Compile tests on multiple Arduino platforms
  platforms:
    - uno          # Standard AVR platform
    - due          # SAM platform
    - m4           # SAMD platform (Adafruit Feather M4 or similar)
    # Add additional platforms if needed, like STM32 or ESP32
    # - mega2560    # If needed for expanded AVR testing
    # - stm32:disco_f407vg # Example STM32 board, adjust for your target board

unittest:
  # Unit test platforms and dependencies
  platforms:
    - uno          # Native host system (Linux in this case)
  libraries:
    - "OneWire"     # Ensure OneWire library is available for testing

# Additional configuration for Arduino CI
# Ensure to specify paths, include additional debugging output
# and validate library and core installation.

# Debugging output added to check the setup.
debug:
  - name: Debug Setup
    run: |
      echo "Checking installed cores..."
      arduino-cli core list
      echo "Checking available libraries..."
      arduino-cli lib list
      echo "Checking if OneWire library is installed..."
      arduino-cli lib list | grep OneWire

# Test the configuration and verbose flag for debugging Arduino CI.
run_tests:
  name: Run Arduino CI Tests with Debugging
  run: |
    echo "Running Arduino CI tests with verbose output..."
    export PATH=$PATH:/home/runner/work/Arduino-Temperature-Control-Library/Arduino-Temperature-Control-Library/bin
    arduino_ci.rb --verbose  # Added verbose flag for debugging
